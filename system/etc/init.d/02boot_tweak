#!/system/bin/sh
# Script to create symlink for uci interface
#
# Modded by Mangusta for U9508

BB=/system/bin/busybox

# oom and mem perm fix, we have auto adj code, do not allow changes in adj
$BB chmod 777 /sys/module/lowmemorykiller/parameters/cost;
$BB chmod 444 /sys/module/lowmemorykiller/parameters/adj;
$BB chmod 777 /proc/sys/vm/mmap_min_addr;

# protect init from oom
echo "-1000" > /proc/1/oom_score_adj;

# set sysrq to 2 = enable control of console logging level as with CM-KERNEL
echo "2" > /proc/sys/kernel/sysrq;

#PIDOFINIT=`pgrep -f "/sbin/ext/post-init.sh"`;
#for i in $PIDOFINIT; do
#	echo "-600" > /proc/${i}/oom_score_adj;
#done;

# allow user and admin to use all free mem.
echo 0 > /proc/sys/vm/user_reserve_kbytes;
echo 8192 > /proc/sys/vm/admin_reserve_kbytes;

if [ ! -d /data/.siyah ]; then
	$BB mkdir -p /data/.siyah;
fi;

# reset config-backup-restore
if [ -f /data/.siyah/restore_running ]; then
	rm -f /data/.siyah/restore_running;
fi;

#ccxmlsum=`md5sum /res/customconfig/customconfig.xml | awk '{print $1}'`
#if [ "a$ccxmlsum" != "a`cat /data/.siyah/.ccxmlsum`" ]; then
#	rm -f /data/.siyah/*.profile;
#	echo "$ccxmlsum" > /data/.siyah/.ccxmlsum;
#fi;

[ ! -f /data/.siyah/default.profile ] && cp -a /res/customconfig/default.profile /data/.siyah/default.profile;
[ ! -f /data/.siyah/battery.profile ] && cp -a /res/customconfig/battery.profile /data/.siyah/battery.profile;
[ ! -f /data/.siyah/performance.profile ] && cp -a /res/customconfig/performance.profile /data/.siyah/performance.profile;

$BB chmod -R 0777 /data/.siyah/;

. /res/customconfig/customconfig-helper;
read_defaults;
read_config;

# HACK: we have problem on boot with stuck service GoogleBackupTransport if many apps installed
# here i will rename the GoogleBackupTransport.apk to boot without it and then restore to prevent
# system not responding popup on after boot.
if [ -e /data/dalvik-cache/not_first_boot ]; then
#	mount -o remount,rw /system;
	mv /system/app/GoogleBackupTransport.apk /system/app/GoogleBackupTransport.apk.off
fi;

# custom boot booster stage 1
echo "$boot_boost" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;

# STweaks check su only at /system/xbin/su make it so
if [ -e /system/xbin/su ]; then
	echo "root for STweaks found";
elif [ -e /system/bin/su ]; then
	cp /system/bin/su /system/xbin/su;
	chmod 6755 /system/xbin/su;
else
	echo "ROM without ROOT";
fi;


# some nice thing for dev
$BB ln -s /sys/devices/system/cpu/cpu0/cpufreq /cpufreq;
$BB ln -s /sys/devices/system/cpu/cpufreq/ /cpugov;

# enable kmem interface for everyone by GM
echo "0" > /proc/sys/kernel/kptr_restrict;

# Cortex parent should be ROOT/INIT and not STweaks
nohup /system/xbin/ext/cortexbrain-tune.sh;
CORTEX=`pgrep -f "/system/xbin/ext/cortexbrain-tune.sh"`;
echo "-1000" > /proc/$CORTEX/oom_score_adj;

# disable debugging on some modules
if [ "$logger" == "off" ]; then
	echo "0" > /sys/module/kernel/parameters/initcall_debug;
	echo "0" > /sys/module/lowmemorykiller/parameters/debug_level;
	echo "0" > /sys/module/earlysuspend/parameters/debug_mask;
	echo "0" > /sys/module/alarm/parameters/debug_mask;
	echo "0" > /sys/module/alarm_dev/parameters/debug_mask;
	echo "0" > /sys/module/binder/parameters/debug_mask;
	echo "0" > /sys/module/xt_qtaguid/parameters/debug_mask;
fi;

# for ntfs automounting
mount -t tmpfs -o mode=0777,gid=1000 tmpfs /mnt/ntfs

# Apps Install
$BB sh /system/xbin/ext/install.sh;

# EFS Backup
$BB sh /system/xbin/ext/efs-backup.sh;


echo "0" > /tmp/uci_done;
chmod 666 /tmp/uci_done;

(
	# custom boot booster
	COUNTER=0;
	while [ "`cat /tmp/uci_done`" != "1" ]; do
		if [ "$COUNTER" -ge "10" ]; then
			break;
		fi;
		echo "$boot_boost" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
		echo "800000" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
		pkill -f "com.gokhanmoral.stweaks.app";
		echo "Waiting For UCI to finish";
		sleep 10;
		COUNTER=$(($COUNTER+1));
	done;

	# give home launcher, oom protection
	# TODO
	# check if compatible with Huawei	
	ACORE_APPS=`pgrep acore`;
	if [ "a$ACORE_APPS" != "a" ]; then
		for c in `pgrep acore`; do
			echo "-900" > /proc/${c}/oom_score_adj;
		done;
	fi;

	# restore normal freq
	echo "$scaling_min_freq" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq;
	echo "$scaling_max_freq" > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq;
	

	# HACK: restore GoogleBackupTransport.apk after boot.
	if [ -e /data/dalvik-cache/not_first_boot ]; then
		mv /system/app/GoogleBackupTransport.apk.off /system/app/GoogleBackupTransport.apk
	else
		touch /data/dalvik-cache/not_first_boot;
		chmod 777 /data/dalvik-cache/not_first_boot;
	fi;
)&

(
	# stop uci.sh from running all the PUSH Buttons in stweaks on boot
#	$BB mount -o remount,rw rootfs;
	$BB chown -R root:system /res/customconfig/actions/;
	$BB chmod -R 6755 /res/customconfig/actions/;
	$BB mv /res/customconfig/actions/push-actions/* /res/no-push-on-boot/;
	$BB chmod 6755 /res/no-push-on-boot/*;

	# apply STweaks settings
	echo "booting" > /data/.siyah/booting;
	chmod 777 /data/.siyah/booting;
	pkill -f "com.gokhanmoral.stweaks.app";
	nohup $BB sh /res/uci.sh restore;
	UCI_PID=`pgrep -f "/res/uci.sh"`;
	echo "-1000" > /proc/$UCI_PID/oom_score_adj;
	echo "1" > /tmp/uci_done;

	# restore all the PUSH Button Actions back to there location
#	$BB mount -o remount,rw rootfs;
	$BB mv /res/no-push-on-boot/* /res/customconfig/actions/push-actions/;
	pkill -f "com.gokhanmoral.stweaks.app";

	# update cpu tunig after profiles load
	$BB sh /system/xbin/ext/cortexbrain-tune.sh apply_cpu update > /dev/null;
	$BB rm -f /data/.siyah/booting;


	# ###############################################################
	# I/O related tweaks
	# ###############################################################

	DM=`ls -d /sys/block/dm*`;
	for i in ${DM}; do
		if [ -e $i/queue/rotational ]; then
			echo "0" > ${i}/queue/rotational;
		fi;

		if [ -e $i/queue/iostats ]; then
			echo "0" > ${i}/queue/iostats;
		fi;
	done;

#	# correct touch keys light, if rom mess user configuration
#	$BB sh /res/uci.sh generic /sys/class/misc/notification/led_timeout_ms $led_timeout_ms;

	# correct oom tuning, if changed by apps/rom
	$BB sh /res/uci.sh oom_config_screen_on $oom_config_screen_on;
	$BB sh /res/uci.sh oom_config_screen_off $oom_config_screen_off;

	echo "Done Booting" > /data/dm-boot-check;
	date >> /data/dm-boot-check;
)&

